(fn filter (pred ls)
	(if (= ls ()) 
		()
		(last
			(set h (head ls))
			(set next (filter pred (tail ls)))
			(if (pred h)
				(cons h next)
				next))))

(fn apply (f args)
	(eval (cons f args)))

(fn fold (op acc ls)
	(if (= ls ())
		acc
		(fold op (op acc (head ls)) (tail ls))))

(fn seq (max)
	(fn go (max acc)
		(if (= max 0) 
			acc
			(go (- max 1) (cons max acc))))
	(go max ()))
